
apiVersion: v1
kind: Service
metadata:
  name: '{{$.Values.software.softwareName}}-service'
  namespace: '{{$.Values.namespace}}'
  labels:
    softwareId: '{{$.Values.software.softwareId}}'
    softwareName: '{{$.Values.software.softwareName}}'
spec:
  ports:
    - name: "web"
      protocol: "TCP"
      port: 8080
  selector:
      app: '{{$.Values.software.softwareName}}'
  type: ClusterIP
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: '{{$.Values.software.softwareName}}'
  namespace: '{{$.Values.namespace}}'
  labels:
    softwareId: '{{$.Values.software.softwareId}}'
    softwareName: '{{$.Values.software.softwareName}}'
spec:
  selector:
    matchLabels:
      app: '{{$.Values.software.softwareName}}'
  replicas: 1
  template:
    metadata:
      namespace: '{{$.Values.namespace}}'
      labels:
        app: '{{$.Values.software.softwareName}}'
        environment: '{{$.Values.environment.name}}'
        softwareId: '{{$.Values.software.softwareId}}'
        softwareName: '{{$.Values.software.softwareName}}'
    spec:
      containers:
      - image: '{{$.Values.software.image.containerRepo}}'
        imagePullPolicy: IfNotPresent
        name: '{{$.Values.software.softwareName}}'
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: rbb-cdconsole-bot-pull-secret
